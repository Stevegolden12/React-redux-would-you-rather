{"ast":null,"code":"import { _saveQuestion, _saveQuestionAnswer } from '../utils/_DATA.js';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const ADD_ANSWER = 'ADD_ANSWER';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction addNewQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function addQuestion({\n  optionOneText,\n  optionTwoText\n}) {\n  return (dispatch, getState) => {\n    const _getState = getState(),\n          authedUser = _getState.authedUser; // dispatch(showLoading())\n\n\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author: authedUser\n    }).then(question => dispatch(addNewQuestion(question))); //.then(() => dispatch(hideLoading()))\n  };\n}\n\nfunction addNewAnswer(answer) {\n  return {\n    type: ADD_QUESTION,\n    answer\n  };\n}\n\nexport function addAnswer({\n  qid,\n  answer\n}) {\n  return (dispatch, getState) => {\n    const _getState2 = getState(),\n          authedUser = _getState2.authedUser; // dispatch(showLoading())\n\n\n    return _saveQuestionAnswer({\n      qid,\n      answer,\n      author: authedUser\n    }).then(answer => dispatch(addNewAnswer(answer))); //.then(() => dispatch(hideLoading()))\n  };\n}","map":{"version":3,"sources":["C:/Users/Steve/Documents/GitHub/react-redux-would-you-rather/src/actions/questions.js"],"names":["_saveQuestion","_saveQuestionAnswer","RECEIVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER","receiveQuestions","questions","type","addNewQuestion","question","addQuestion","optionOneText","optionTwoText","dispatch","getState","authedUser","author","then","addNewAnswer","answer","addAnswer","qid"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,mBAAxB,QAAmD,mBAAnD;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAGP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEL,iBADD;AAELI,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,SAAO;AACLF,IAAAA,IAAI,EAAEJ,YADD;AAELM,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,WAAT,CAAqB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAArB,EAAuD;AAC5D,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA,sBACNA,QAAQ,EADF;AAAA,UACrBC,UADqB,aACrBA,UADqB,EAG9B;;;AAEC,WAAOf,aAAa,CAAC;AACnBW,MAAAA,aADmB;AAEnBC,MAAAA,aAFmB;AAGnBI,MAAAA,MAAM,EAAED;AAHW,KAAD,CAAb,CAKJE,IALI,CAKER,QAAD,IAAcI,QAAQ,CAACL,cAAc,CAACC,QAAD,CAAf,CALvB,CAAP,CAL6B,CAW3B;AACH,GAZD;AAaD;;AAED,SAASS,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,SAAO;AACLZ,IAAAA,IAAI,EAAEJ,YADD;AAELgB,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA,GAAF;AAAOF,EAAAA;AAAP,CAAnB,EAAoC;AACzC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAAA,uBACNA,QAAQ,EADF;AAAA,UACrBC,UADqB,cACrBA,UADqB,EAG7B;;;AAEA,WAAOd,mBAAmB,CAAC;AACzBoB,MAAAA,GADyB;AAEzBF,MAAAA,MAFyB;AAGzBH,MAAAA,MAAM,EAAED;AAHiB,KAAD,CAAnB,CAKJE,IALI,CAKEE,MAAD,IAAYN,QAAQ,CAACK,YAAY,CAACC,MAAD,CAAb,CALrB,CAAP,CAL6B,CAW7B;AACD,GAZD;AAaD","sourcesContent":["import { _saveQuestion, _saveQuestionAnswer } from '../utils/_DATA.js';\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const ADD_ANSWER = 'ADD_ANSWER'\r\n\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions,\r\n  }\r\n}\r\n\r\nfunction addNewQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    question,\r\n  }\r\n}\r\n\r\nexport function addQuestion({ optionOneText, optionTwoText }) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n   // dispatch(showLoading())\r\n\r\n    return _saveQuestion({\r\n      optionOneText,\r\n      optionTwoText,\r\n      author: authedUser,     \r\n    })\r\n      .then((question) => dispatch(addNewQuestion(question)))\r\n      //.then(() => dispatch(hideLoading()))\r\n  }\r\n}\r\n\r\nfunction addNewAnswer(answer) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    answer,\r\n  }\r\n}\r\n\r\nexport function addAnswer({ qid, answer }) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n    // dispatch(showLoading())\r\n\r\n    return _saveQuestionAnswer({\r\n      qid,\r\n      answer,\r\n      author: authedUser,\r\n    })\r\n      .then((answer) => dispatch(addNewAnswer(answer)))\r\n    //.then(() => dispatch(hideLoading()))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}